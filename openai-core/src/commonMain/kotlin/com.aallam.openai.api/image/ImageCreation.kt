package com.aallam.openai.api.image

import com.aallam.openai.api.BetaOpenAI
import com.aallam.openai.api.OpenAIDsl
import com.aallam.openai.api.model.ModelId

/**
 * Image generation request.
 */
public class ImageCreation(
    /**
     * A text description of the desired image(s).
     * The maximum length is 32,000 characters for gpt-image-1,
     * 1000 characters for dall-e-2 and 4000 characters for dall-e-3.
     */
    public val prompt: String,
    /**
     * The number of images to generate. Must be between 1 and 10.
     */
    public val n: Int? = null,
    /**
     * The size of the generated images.
     */
    public val size: ImageSize? = null,

    /**
     * The format in which the generated images are returned. Must be one of url or b64_json.
     */
    public val user: String? = null,

    /**
     * The model used to generate image. Must be one of dall-e-2 or dall-e-3. If not provided, dall-e-2 is used.
     */
    public val model: ModelId? = null,

    /**Allows to set transparency for the background of the generated image(s).
     * This parameter is only supported for gpt-image-1.
     * Must be one of [Background.Transparent], [Background.Opaque] or [Background.Auto] (default value).
     * When auto is used, the model will automatically determine the best background for the image.
     * If transparent, the output format needs to support transparency, so it should be set to either png (default value) or webp.
     */
    public val background: Background? = null,

    /**
     * The format in which the generated images are returned.
     * This parameter is only supported for gpt-image-1.
     * Must be one of [OutputFormat.Png] (default), [OutputFormat.Jpeg] or [OutputFormat.Webp].
     */
    public val outputFormat: OutputFormat? = null,

    /**
     * The compression level (0-100%) for the generated images.
     * This parameter is only supported for gpt-image-1 with the
     * webp or jpeg output formats, and defaults to 100.
     */
    public val outputCompression: Int? = null,

    /**
     * Control the content-moderation level for images generated by gpt-image-1.
     * Must be either [Moderation.Low] for less restrictive filtering or [Moderation.Auto] (default value).
     */
    public val moderation: Moderation? = null,

    /**
     * The quality of the image that will be generated.
     *
     * [Quality.Auto] (default value) will automatically select the best quality for the given model.
     * [Quality.High], [Quality.Medium] and [Quality.Low] are supported for gpt-image-1.
     * [Quality.HD] and [Quality.Standard] are supported for dall-e-3.
     * [Quality.Standard] is the only option for dall-e-2.
     */
    public val quality: Quality? = null,

    /**
     * The style of the generated images. Must be one of [Style.Vivid] or [Style.Natural]. Vivid causes the model to
     * lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less
     * hyper-real looking images. This param is only supported for dall-e-3.
     */
    public val style: Style? = null,
)

/**
 * Image generation request.
 */
@BetaOpenAI
public fun imageCreation(block: ImageCreationBuilder.() -> Unit): ImageCreation =
    ImageCreationBuilder().apply(block).build()

/**
 * Builder of [ImageCreation] instances.
 */
@BetaOpenAI
@OpenAIDsl
public class ImageCreationBuilder {

    /**
     * A text description of the desired image(s). The maximum length is 1000 characters.
     */
    public var prompt: String? = null

    /**
     * The number of images to generate. Must be between 1 and 10.
     */
    public var n: Int? = null

    /**
     * The size of the generated images.
     */
    public var size: ImageSize? = null

    /**
     * The format in which the generated images are returned. Must be one of url or b64_json.
     */
    public var user: String? = null

    /**
     * The model used to generate image. Must be one of dall-e-2 or dall-e-3. If not provided, dall-e-2 is used.
     */
    public var model: ModelId? = null

    /**
     * Allows to set transparency for the background of the generated image(s).
     * This parameter is only supported for gpt-image-1.
     */
    public var background: Background? = null

    /**
     * The format in which the generated images are returned.
     * This parameter is only supported for gpt-image-1.
     */
    public var outputFormat: OutputFormat? = null

    /**
     * The compression level (0-100%) for the generated images.
     * This parameter is only supported for gpt-image-1 with the
     * webp or jpeg output formats, and defaults to 100.
     */
    public var outputCompression: Int? = null

    /**
     * Control the content-moderation level for images generated by gpt-image-1.
     */
    public var moderation: Moderation? = null

    /**
     * The quality of the image that will be generated.
     */
    public var quality: Quality? = null

    /**
     * The style of the generated images. This param is only supported for dall-e-3.
     */
    public var style: Style? = null

    /**
     * Creates the [ImageCreation] instance
     */
    public fun build(): ImageCreation = ImageCreation(
        prompt = requireNotNull(prompt),
        n = n,
        size = size,
        user = user,
        model = model,
        background = background,
        outputFormat = outputFormat,
        outputCompression = outputCompression,
        moderation = moderation,
        quality = quality,
        style = style,
    )
}
